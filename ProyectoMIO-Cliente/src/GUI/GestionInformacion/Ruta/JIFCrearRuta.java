package GUI.GestionInformacion.Ruta;

import GUI.PaquetePrincipal.AnclarVentanaInterna;
import Modelo.Validadores.LanzarMensaje;
import Modelo.Excepciones.MiExcepcion;
import Modelo.Validadores.Validador;
import Modelo.Entidades.Empleado;
import Control.ControlEstacion;
import Control.ControlEmpleado;
import Control.ControlRecorrido;
import Control.ControlRuta;
import Modelo.Entidades.Estacion;
import Modelo.Entidades.Recorrido;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.util.Arrays;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;

/**
 *
 * JIFCrearRuta
 * 
 * @author Mauricio Bernardo Dominguez Bocanegra. Código: 9927680
 * @author Martha Cecilia Holguin Tovar. Código: 1129455
 * @author Jesús Alberto Ramírez Otálvaro. Código: 1422554
 * 
 */

public class JIFCrearRuta extends AnclarVentanaInterna {

    /**
     * Creates new form JIFEmployee
     *
     * @param titulo Un string correspondiente al titulo del JInternalFrame
     * @param parent_w
     * @param parent_h
     */
    public JIFCrearRuta(String titulo, int parent_w, int parent_h) throws MiExcepcion {
        super();
        this.parentWidth = parent_w;
        this.parentHeight = parent_h;
        setTitle(titulo);
        setResizable(false);
        setClosable(true);
        setMaximizable(false);
        setSize(WIDTH_, HEIGHT_);
        setLocation((int) (Math.abs(this.parentWidth - this.getSize().width) / 2), (int) (Math.abs(this.parentHeight - this.getSize().height) / 2));
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLocked(true);
        // INICIALIZAMOS COMPONENTES
        initComponents();
        // INICIALIZAMOS ATRIBUTOS
        validador = new Validador();
        lanzarMensaje = new LanzarMensaje(this);
        
        controlRuta = new ControlRuta();
        controlRecorrido = new ControlRecorrido();
        
        // CONTROL
        /*setEnabledGeneralDataForm(false);
        setEnabledContractForm(false);
        setEnabledSaveControl(false);*/
        // Definimos el valor de la acción por defecto siempre en -1.
        //action = -1;
        // ACTUALIZAMOS EL COMBOBOX Y SETEAMOS SU ActionListener
        actualizarListaRecorridos();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPBotonCrear = new javax.swing.JPanel();
        jBCrearEstacion = new javax.swing.JButton();
        jPInformacionEstacion = new javax.swing.JPanel();
        jLNombreEstacion = new javax.swing.JLabel();
        jTFNombreRuta = new javax.swing.JTextField();
        jLCedulaDirector = new javax.swing.JLabel();
        jCBIdRecorrido = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(407, 800));
        getContentPane().setLayout(new java.awt.BorderLayout(10, 10));

        jPBotonCrear.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jBCrearEstacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBCrearEstacion.setText("CREAR RUTA");
        jBCrearEstacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCrearEstacionActionPerformed(evt);
            }
        });
        jPBotonCrear.add(jBCrearEstacion);

        getContentPane().add(jPBotonCrear, java.awt.BorderLayout.PAGE_END);

        jPInformacionEstacion.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPInformacionEstacion.setLayout(new java.awt.GridLayout(2, 2, 0, 10));

        jLNombreEstacion.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLNombreEstacion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLNombreEstacion.setText("Nombre:");
        jPInformacionEstacion.add(jLNombreEstacion);
        jPInformacionEstacion.add(jTFNombreRuta);

        jLCedulaDirector.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLCedulaDirector.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLCedulaDirector.setText("Identificador del Recorrido: ");
        jPInformacionEstacion.add(jLCedulaDirector);

        jCBIdRecorrido.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPInformacionEstacion.add(jCBIdRecorrido);

        getContentPane().add(jPInformacionEstacion, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * cleanGeneralDataForm.
     */
    private void limpiarCampos() {
                
        jTFNombreRuta.setText("");
        jCBIdRecorrido.setSelectedIndex(0);
        
    }
    
    /**
     * setEnabledGeneralDataForm
     *
     * @param bool
     */ 
           
    private void actualizarListaRecorridos() throws MiExcepcion {
        Recorrido[] recorridos = controlRecorrido.listarRecorridos();
        if ((Arrays.asList(recorridos)).isEmpty()) {
            throw new MiExcepcion("No hay recorridos registrados en la base de datos.");
        }
        
        String[] id = new String[recorridos.length+1];
        
        id[0] = "Seleccione el recorrido...";
        
        for(int i=1; i<=recorridos.length; i++){
            
            id[i] = "" + recorridos[i-1].getId();
            
        }
        
        jCBIdRecorrido.setModel(new javax.swing.DefaultComboBoxModel(id));
    }

    private void pinTab(int actualTab) {
        
    }

    private void unpinTab() {
        
    }

    /**
     * searchEmployee [Método encargado de buscar la informacion general del
     * empleado y ponerla en el formulario].
     *
     * @throws MyException
     * @throws ParseException
     */
    

    private void jBCrearEstacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCrearEstacionActionPerformed
        
        String[] informacion = new String[2];
        
        informacion[0] = jTFNombreRuta.getText().trim();        
        informacion[1] = (String) jCBIdRecorrido.getSelectedItem();
                      
        try {                           
            
            validador.validarCampoVacio(informacion[0], "NOMBRE");                
                        
            if(jCBIdRecorrido.getSelectedItem()==jCBIdRecorrido.getItemAt(0)) {
                
                lanzarMensaje.mostrarMessageDialog("Debe seleccionar algún recorrido.", title, JOptionPane.INFORMATION_MESSAGE); 
                
            } else {
                
                controlRuta.crearRuta(informacion);

                lanzarMensaje.mostrarMessageDialog("La ruta fue creada con éxito.", title, JOptionPane.INFORMATION_MESSAGE); 

                limpiarCampos();
            
            }
            
        } catch (MiExcepcion ex) {
            
            lanzarMensaje.mostrarMessageDialog(ex.getMessage(), title, JOptionPane.ERROR_MESSAGE);
            
        }
        
    }//GEN-LAST:event_jBCrearEstacionActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCrearEstacion;
    private javax.swing.JComboBox jCBIdRecorrido;
    private javax.swing.JLabel jLCedulaDirector;
    private javax.swing.JLabel jLNombreEstacion;
    private javax.swing.JPanel jPBotonCrear;
    private javax.swing.JPanel jPInformacionEstacion;
    private javax.swing.JTextField jTFNombreRuta;
    // End of variables declaration//GEN-END:variables
    private final static int WIDTH_ = 470;
    private final static int HEIGHT_ = 150;
    private final int parentWidth;
    private final int parentHeight;
    private final LanzarMensaje lanzarMensaje;
    private final Validador validador;
    private final ControlRuta controlRuta;
    private final ControlRecorrido controlRecorrido;  
    
}
