package GUI.GestionInformacion.Empleado;

import Control.ControlEmpleado;
import GUI.PaquetePrincipal.AnclarVentanaInterna;
import Modelo.Entidades.Empleado;
import Modelo.Validadores.LanzarMensaje;
import Modelo.Excepciones.MiExcepcion;
import Modelo.Validadores.Validador;
import com.toedter.calendar.JDateChooser;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.border.EtchedBorder;

/**
 *
 * JIFBuscarEmpleado
 * 
 
 * @author Mauricio Bernardo Dominguez Bocanegra. Código: 9927680
 * @author Martha Cecilia Holguin Tovar. Código: 1129455
 * @author Jesús Alberto Ramírez Otálvaro. Código: 1422554
 
 */

public class JIFBuscarEmpleado extends AnclarVentanaInterna {

    /**
     * Creates new form JIFViewProfile
     *
     * @param title
     * @param parentWidth
     * @param parentHeight
     * @param username
     * @param completeName
     */
    public JIFBuscarEmpleado(String title, int parentWidth, int parentHeight) throws MiExcepcion {
        super();
        this.parentWidth = parentWidth;
        this.parentHeight = parentHeight;
        setTitle(title);
        setResizable(false);
        setClosable(true);
        setMaximizable(false);
        setSize(WIDTH_, HEIGHT_);
        setLocation((int) (Math.abs(this.parentWidth - this.getSize().width) / 2), (int) (Math.abs(this.parentHeight - this.getSize().height) / 2));
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLocked(true);
        initComponents();
        initializeComponents();
        actualizarEmpleados();
        jCBCedulaEmpleado.addActionListener(manejadorEventos);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPInformacion = new javax.swing.JPanel();
        jLCedulaEmpleado = new javax.swing.JLabel();
        jTFCedulaEmpleado = new javax.swing.JTextField();
        jCBCedulaEmpleado = new javax.swing.JComboBox();
        jPLabels = new javax.swing.JPanel();
        jLControlPassword = new javax.swing.JLabel();
        jPControls = new javax.swing.JPanel();
        jPBotonBuscar = new javax.swing.JPanel();
        jPContenedorBoton = new javax.swing.JPanel();
        jBBuscarCedula = new javax.swing.JButton();

        jPInformacion.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPInformacion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPInformacion.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 5));

        jLCedulaEmpleado.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLCedulaEmpleado.setText("Cedula empleado");
        jPInformacion.add(jLCedulaEmpleado);

        jTFCedulaEmpleado.setMaximumSize(new java.awt.Dimension(200, 25));
        jTFCedulaEmpleado.setMinimumSize(new java.awt.Dimension(40, 25));
        jTFCedulaEmpleado.setPreferredSize(new java.awt.Dimension(100, 25));
        jPInformacion.add(jTFCedulaEmpleado);

        jCBCedulaEmpleado.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCBCedulaEmpleado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCBCedulaEmpleado.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jCBCedulaEmpleadoComponentShown(evt);
            }
        });
        jCBCedulaEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBCedulaEmpleadoActionPerformed(evt);
            }
        });
        jPInformacion.add(jCBCedulaEmpleado);

        jPLabels.setLayout(new java.awt.GridLayout(3, 0));
        jPLabels.add(jLControlPassword);

        jPInformacion.add(jPLabels);

        jPControls.setLayout(new java.awt.GridLayout(3, 0));
        jPInformacion.add(jPControls);

        getContentPane().add(jPInformacion, java.awt.BorderLayout.NORTH);

        jPBotonBuscar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPBotonBuscar.setMaximumSize(new java.awt.Dimension(610, 37));
        jPBotonBuscar.add(jPContenedorBoton);

        jBBuscarCedula.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBBuscarCedula.setText("BUSCAR EMPLEADO");
        jBBuscarCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarCedulaActionPerformed(evt);
            }
        });
        jPBotonBuscar.add(jBBuscarCedula);

        getContentPane().add(jPBotonBuscar, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBBuscarCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarCedulaActionPerformed
        try {
            registros = false;
            displayTab();
        } catch (MiExcepcion ex) {
            Logger.getLogger(JIFBuscarEmpleado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBBuscarCedulaActionPerformed

    private void jCBCedulaEmpleadoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jCBCedulaEmpleadoComponentShown
        
    }//GEN-LAST:event_jCBCedulaEmpleadoComponentShown

    private void jCBCedulaEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBCedulaEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBCedulaEmpleadoActionPerformed

    private void initializeComponents() {
        lanzarMensaje = new LanzarMensaje(this);
        manejadorEventos = new buscarEmpleadoManejadorEventos();
        controlEmpleado = new ControlEmpleado();
        validador = new Validador();
        registros = true;
    }

    private void actualizarEmpleados() throws MiExcepcion {
        Empleado[] empleados = controlEmpleado.listarEmpleados();
        if ((Arrays.asList(empleados)).isEmpty()) {
            
            if(!registros){
                dispose();
            }
            
            throw new MiExcepcion("No hay empleados registrados en la base de datos.");
        }
        
        String[] cedulas = new String[empleados.length+1];
        
        cedulas[0] = "Seleccione la cédula del empleado ...";
        
        for(int i=1; i<=empleados.length; i++){
            
            cedulas[i] = empleados[i-1].getCedula() + " " + empleados[i-1].getApellidos() + " " + empleados[i-1].getNombres();
            
        }
        
        jCBCedulaEmpleado.setModel(new javax.swing.DefaultComboBoxModel(cedulas));
    }
    
    private void displayTab() throws MiExcepcion {
        // Bloqueamos el boton Buscar
        jBBuscarCedula.setEnabled(false);
        jTFCedulaEmpleado.setEditable(false);
        jCBCedulaEmpleado.setEnabled(false);
        // Desbloqueamos el Internal Frame     
        setLocked(false);
        // Definimos un nuevo tamaño.
        setSize(WIDTH_, 280);
        // Definimos el layot del panel...  
        jPUpdatePassword = new JPanel();
        jPUpdatePassword.setLayout(new BorderLayout());
        jPUpdatePassword.setBorder(new EtchedBorder());
        // Creamos un panel para las etiquetas.
        JPanel jPUpdateLabels = new JPanel();
        jPUpdateLabels.setLayout(new GridLayout(7, 1));
        // Creamos las etiquetas.
        JLabel jLNombres = new JLabel("Nombres:");
        JLabel jLApellidos = new JLabel("Apellidos:");
        JLabel jLFechaNacimiento = new JLabel("Fecha de nacimiento:");
        JLabel jLEstadoCivil = new JLabel("Estado civil:");
        JLabel jLSalario = new JLabel("Salario:");
        JLabel jLCargo = new JLabel("Cargo:");
        JLabel jLTelefono = new JLabel("Telefono:");
        
        // Añadimos las etiquetas.
        jPUpdateLabels.add(jLNombres);
        jPUpdateLabels.add(jLApellidos);
        jPUpdateLabels.add(jLFechaNacimiento);
        jPUpdateLabels.add(jLEstadoCivil);
        jPUpdateLabels.add(jLSalario);
        jPUpdateLabels.add(jLCargo);
        jPUpdateLabels.add(jLTelefono);
        
        // Creamos el panel para los campos de contraseña.
        JPanel jPUpdateTF = new JPanel();
        jPUpdateTF.setLayout(new GridLayout(7, 1));
        // Campos de contraseña.
        jTFNombres = new JTextField();
        jTFApellidos = new JTextField();
        jDCFechaNacimiento = new JDateChooser();
        jCBEstadoCivil = new JComboBox();
        jTFSalario = new JTextField();
        jCBCargo = new JComboBox();
        jTFTelefono = new JTextField();
        
        String[] estadoCivil = {"Seleccione el estado civil...", "SOLTERO(A)", "CASADO(A)", "VIUDO(A)", "UNION LIBRE", "DIVORCIADO(A)"};
        
        for(int i=0; i<estadoCivil.length; i++) {
        jCBEstadoCivil.addItem(estadoCivil[i]);
                }
        
        String[] cargos = {"Seleccione el cargo...", "DIRECTOR(A)", "CONDUCTOR(A)", "AUXILIAR"};
        
        for(int i=0; i<cargos.length; i++) {
        jCBCargo.addItem(cargos[i]);
                }
                
        // Añadimos los campos de texto al panel
        jPUpdateTF.add(jTFNombres);
        jPUpdateTF.add(jTFApellidos);
        jPUpdateTF.add(jDCFechaNacimiento);
        jPUpdateTF.add(jCBEstadoCivil);
        jPUpdateTF.add(jTFSalario);
        jPUpdateTF.add(jCBCargo);
        jPUpdateTF.add(jTFTelefono);
        
        jPBotonesModificar = new JPanel();
        jPBotonesModificar.setLayout(new FlowLayout());
        //jPBotonesModificar.setBorder(new EtchedBorder());
        
        jBGuardarModificaciones = new JButton("GUARDAR MODIFICACIÓN");
        jBGuardarModificaciones.addActionListener(manejadorEventos);
        
        jBCancelar = new JButton("CANCELAR");
        jBCancelar.addActionListener(manejadorEventos);
        
        jPBotonesModificar.add(jBGuardarModificaciones);
        jPBotonesModificar.add(jBCancelar);
        
        jPBotonesModificar.setVisible(false);
        
        String cedula = jTFCedulaEmpleado.getText().trim();
        
        Empleado empleado = controlEmpleado.buscarEmpleado(cedula);
        
        jTFNombres.setText(empleado.getNombres());
        jTFApellidos.setText(empleado.getApellidos());
        ((JTextField) jDCFechaNacimiento.getDateEditor()).setText(empleado.getFechaNacimiento());
        
        for(int i=1; i<jCBEstadoCivil.getItemCount(); i++){
            if(empleado.getEstadoCivil().equals(jCBEstadoCivil.getItemAt(i))){
                jCBEstadoCivil.setSelectedIndex(i);
                break;
            }
        }       
                
        jTFSalario.setText(""+empleado.getSalario());
        
        for(int i=1; i<jCBCargo.getItemCount(); i++){
            if(empleado.getCargo().equals(jCBCargo.getItemAt(i))){
                jCBCargo.setSelectedIndex(i);
                break;
            }
        }  
        
        jTFTelefono.setText(empleado.getTelefono());
        
        jTFNombres.setEditable(false);
        jTFApellidos.setEditable(false);
        jDCFechaNacimiento.setEnabled(false);
        jCBEstadoCivil.setEnabled(false);
        jTFSalario.setEditable(false);
        jCBCargo.setEnabled(false);
        jTFTelefono.setEditable(false);
        
        // Creamos un panel para los botones
        JPanel jPUpdateButtons = new JPanel();
        //jPUpdateButtons.setLayout(new GridLayout(1, 2));
        jPUpdateButtons.setLayout(new FlowLayout());
        
        JPanel jPBotones = new JPanel();
        jPBotones.setLayout(new BoxLayout(jPBotones, BoxLayout.PAGE_AXIS));
        jPBotones.setBorder(new EtchedBorder());
        //jPBotones.setLayout(new FlowLayout());
        //jPBotones.setLayout(new GridLayout(1, 2));
        //jPUpdateButtons.setBorder(new EtchedBorder());
        // Creamos los botones.
        jBModificar = new JButton("MODIFICAR");
        jBModificar.addActionListener(manejadorEventos);
        
        jBEliminar = new JButton("ELIMINAR");
        jBEliminar.addActionListener(manejadorEventos);
        
        jBBuscar = new JButton("BUSCAR DE NUEVO");
        jBBuscar.addActionListener(manejadorEventos);
        
        // Procedemos a agregar los botones al panel
        jPUpdateButtons.add(jBModificar);
        jPUpdateButtons.add(jBEliminar);
        jPUpdateButtons.add(jBBuscar);
        
        jPBotones.add(jPBotonesModificar);
        jPBotones.add(jPUpdateButtons);
        // Procedemos a armar el panel completo.
        jPUpdatePassword.add(jPUpdateLabels, "Before");
        jPUpdatePassword.add(jPUpdateTF, "Center");
        jPUpdatePassword.add(jPBotones, "Last");
        
        //jPUpdatePassword.add(jPUpdateLabels, "Before");
        //jPUpdatePassword.add(jPUpdateTF);
        //jPUpdatePassword.add(jPBotonesModificar);
        
        //jPUpdatePassword.add(jPUpdateButtons, "Last");
        // Agregamos el panel ala ventana principal
        //this.add(jPUpdatePassword, "South");
        this.jPBotonBuscar.setLayout(new BoxLayout(jPBotonBuscar, BoxLayout.PAGE_AXIS));
        this.jPBotonBuscar.add(jPUpdatePassword);        
        // Bloqueamos de nuevo el internal frame para que no se pueda mover.
        //setLocked(true);
        // Actualizamos la interfaz.
        updateUI();
    }

    private void retractTab() {
        // Limpiamos los campos.
        this.jBBuscarCedula.setEnabled(true);
        this.jCBCedulaEmpleado.setEnabled(true);
        
        this.jTFNombres.setText("");
        this.jTFApellidos.setText("");
        ((JTextField) jDCFechaNacimiento.getDateEditor()).setText("");
        this.jCBEstadoCivil.setSelectedIndex(0);
        this.jTFSalario.setText("");
        this.jCBCargo.setSelectedIndex(0);
        this.jTFTelefono.setText("");
        // Debemos recoger la ventana y retirar los componentes.
        // Reactivamos el boton editar.
        
        // Retiramos los componentes:
        this.jPBotonBuscar.remove(jPUpdatePassword);
        jPBotonBuscar.setLayout(new FlowLayout());
        // Desbloqueamos el internal frame para devolverlo a su tamaño original.
        setLocked(false);
        setSize(WIDTH_, HEIGHT_);
        setLocked(true);
        // Actualizamos la interfaz grafica.
        updateUI();
    }
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBuscarCedula;
    private javax.swing.JComboBox jCBCedulaEmpleado;
    private javax.swing.JLabel jLCedulaEmpleado;
    private javax.swing.JLabel jLControlPassword;
    private javax.swing.JPanel jPBotonBuscar;
    private javax.swing.JPanel jPContenedorBoton;
    private javax.swing.JPanel jPControls;
    private javax.swing.JPanel jPInformacion;
    private javax.swing.JPanel jPLabels;
    private javax.swing.JTextField jTFCedulaEmpleado;
    // End of variables declaration//GEN-END:variables
    private final int parentWidth;
    private final int parentHeight;
    private JButton jBModificar;
    private JButton jBEliminar;
    private JButton jBBuscar;
    private JButton jBGuardarModificaciones;
    private JButton jBCancelar;
    private JTextField jTFNombres;
    private JTextField jTFApellidos;
    private JDateChooser jDCFechaNacimiento;
    private JComboBox jCBEstadoCivil;
    private JTextField jTFSalario;
    private JComboBox jCBCargo;
    private JTextField jTFTelefono;
    private JPanel jPUpdatePassword;
    private JPanel jPBotonesModificar;
    private LanzarMensaje lanzarMensaje;
    private buscarEmpleadoManejadorEventos manejadorEventos;
    private final static int WIDTH_ = 650;
    private final static int HEIGHT_ = 120;
    private Validador validador;
    private ControlEmpleado controlEmpleado;
    private boolean registros;

    private class buscarEmpleadoManejadorEventos implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            
            if(e.getSource() == jCBCedulaEmpleado) {
                
                try{
                    if(jCBCedulaEmpleado.getSelectedIndex()!=0){                                                                                          
                                
                        String informacion = (String) jCBCedulaEmpleado.getSelectedItem();
                        
                        String codigo = "";
                        
                        for(int i=0; i<informacion.length(); i++) {
                            
                            if(informacion.charAt(i)==' ') { 
                                
                                codigo = informacion.substring(0, i);  
                                
                                break;
                                
                            }
                        } 
                         
                        jTFCedulaEmpleado.setText(codigo);
                        
                    }else{
                        jTFCedulaEmpleado.setText("");
                    }
                    
                } catch (Exception ex){
                    jTFCedulaEmpleado.setText("");
                }          
            }
            
            if(e.getSource() == jBModificar){
                
                jPBotonesModificar.setVisible(true);
                jBModificar.setEnabled(false);
                jBEliminar.setEnabled(false);
                jBBuscar.setEnabled(false);
                
                jTFNombres.setEditable(true);
                jTFApellidos.setEditable(true);
                jDCFechaNacimiento.setEnabled(true);
                jCBEstadoCivil.setEnabled(true);
                jTFSalario.setEditable(true);
                jCBCargo.setEnabled(true);
                jTFTelefono.setEditable(true);
                
            }
            
            if(e.getSource() == jBGuardarModificaciones) {
                
                String[] arregloEmpleado = new String[8];
                arregloEmpleado[0] = jTFCedulaEmpleado.getText();
                arregloEmpleado[1] = jTFSalario.getText();
                arregloEmpleado[2] = jTFNombres.getText();
                arregloEmpleado[3] = jTFApellidos.getText();
                arregloEmpleado[4] = jTFTelefono.getText();
                arregloEmpleado[5] = ((JTextField) jDCFechaNacimiento.getDateEditor()).getText();
                arregloEmpleado[6] = (String) jCBEstadoCivil.getSelectedItem();
                arregloEmpleado[7] = (String) jCBCargo.getSelectedItem();
                
               
                boolean error = false;
        try {
                                   
            validador.validarCampoVacio(arregloEmpleado[0], "CÉDULA");  
            validador.validarCadenaNumeros(arregloEmpleado[0], "CÉDULA");
            validador.validarCampoVacio(arregloEmpleado[2], "NOMBRES");
            validador.validarCampoVacio(arregloEmpleado[3], "APELLIDOS");  
            validador.validarCampoVacio(arregloEmpleado[1], "SALARIO");              
            validador.validarDouble(arregloEmpleado[1], "SALARIO");
                        
            if(arregloEmpleado[5].equals("")) {
                arregloEmpleado[5] = null;
            }
            
            if(jCBCargo.getSelectedIndex()==0) {
                lanzarMensaje.mostrarMessageDialog("Debe seleccionar algún cargo para el empleado.", title, JOptionPane.INFORMATION_MESSAGE);
                error = true;
            }          
                        
            if(!arregloEmpleado[4].equals("")) {
                validador.validarNumeroTelefonico(arregloEmpleado[4]);
            }
            
            if(arregloEmpleado[6].equals(jCBEstadoCivil.getItemAt(0))){
                arregloEmpleado[6] = "";
            }
            
            if(!error) {
                    controlEmpleado.modificarEmpleado(arregloEmpleado);
                    lanzarMensaje.mostrarMessageDialog("Los datos del empleado fueron modificados con éxito", title, WIDTH);
                    actualizarEmpleados();
                    retractTab();           
            }
                    
                } catch (MiExcepcion ex) {
                    lanzarMensaje.mostrarMessageDialog(ex.getMessage(), title, JOptionPane.ERROR_MESSAGE);
                }
                
                
            }
            
            if(e.getSource() == jBBuscar){
                jBBuscarCedula.setEnabled(true);
                jTFCedulaEmpleado.setEditable(true);
                jCBCedulaEmpleado.setEnabled(true);
                retractTab();
            }if(e.getSource() == jBCancelar){
                retractTab();
            }if(e.getSource() == jBEliminar){
                try {
                    String cedula = jTFCedulaEmpleado.getText();
                    controlEmpleado.eliminarEmpleado(cedula);
                    lanzarMensaje.mostrarMessageDialog("La informacion del empleado fue elimida con éxito", title, WIDTH);
                    retractTab();
                    actualizarEmpleados();
                } catch (MiExcepcion ex) {
                    
                    lanzarMensaje.mostrarMessageDialog(ex.getMessage(), title, JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }
    
};
